<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Quotes on Flygar&#39;s Blog</title>
    <link>https://flygar.github.io/quote/</link>
    <description>Recent content in Quotes on Flygar&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sun, 25 Aug 2019 22:38:18 +0800</lastBuildDate>
    
	<atom:link href="https://flygar.github.io/quote/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Blog Backup</title>
      <link>https://flygar.github.io/quote/blog-backup/</link>
      <pubDate>Sun, 25 Aug 2019 22:38:18 +0800</pubDate>
      
      <guid>https://flygar.github.io/quote/blog-backup/</guid>
      <description>Github pages Back up 操作系统：ubuntu16.04 安装Hexo # 更新源并升级 apt update &amp;amp;&amp;amp; apt upgrade # 安装git apt install git -y # 安装nvm wget -qO- https://raw.github.com/creationix/nvm/master/install.sh | sh # 通过nvm安装Node.js nvm install stable # 安装hexo部署到git page的deployer npm install hexo-deployer-git --save &amp;amp;&amp;amp; npm audit fix # 安装hexo并初始化 npm install -g hexo-cli &amp;amp;&amp;amp; hexo init blog &amp;amp;&amp;amp; cd blog &amp;amp;&amp;amp; npm install  同步Github # 创建密钥并将id_rsa.pub内容添加至github ssh-keygen -t rsa -b 4096 -C &amp;quot;your_email@example.com&amp;quot; # 测试 ssh -T git@github.</description>
    </item>
    
    <item>
      <title>Docker</title>
      <link>https://flygar.github.io/quote/docker/</link>
      <pubDate>Sun, 25 Aug 2019 22:38:18 +0800</pubDate>
      
      <guid>https://flygar.github.io/quote/docker/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;镜像仓库-镜像库-镜像-容器实例
容器(container)实例的运行依赖image文件
一个image文件可以生成多个容器(container)实例
命令中的container可以去掉&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>Git</title>
      <link>https://flygar.github.io/quote/git/</link>
      <pubDate>Sun, 25 Aug 2019 22:38:18 +0800</pubDate>
      
      <guid>https://flygar.github.io/quote/git/</guid>
      <description>add：追踪并添加到暂存区
commit：提交到git仓库(用来保存项目的元数据和对象数据库) 配置信息 # 查看用户信息 cat ~/.gitconfig # 查看配置 git config --list  获取git仓库 # 获取远程git仓库并在本地将仓库命名为blog git clone git@github.com:Flygar/Flygar.github.io.git blog  文件比较 # 查看工作目录与暂存区的文件差异(尚未暂存的文件更新内容) git diff # 查看暂存区文件更新的内容与上次提交的内容差异 git diff --staged # 跳过使用暂存区域，自动把所有已经跟踪过(add提交过)的文件暂存起来一并提交，从而跳过 git add 步骤 git commit -a -m &#39;...&#39;  删除 # 删除git仓库及本地文件 git rm file.log # 从Git仓库中删除,保留本地文件(常用于将已跟踪文件添加至.gitingore) git rm --cached file.log  撤销 git commit -m &#39;initial commit&#39; git add forgotten_file git commit --amend # 将forgotten_file提交信息为&amp;quot;initial commit&amp;quot; git reset HEAD file.</description>
    </item>
    
    <item>
      <title>Linux</title>
      <link>https://flygar.github.io/quote/linux/</link>
      <pubDate>Sun, 25 Aug 2019 22:38:18 +0800</pubDate>
      
      <guid>https://flygar.github.io/quote/linux/</guid>
      <description>-- Linux 别名快捷登录 vim /etc/ssh/ssh_config添加如下配置
Host dv HostName example.com User domainuser  终端里执行ssh dv,相当于ssh domainuser@example.com
Linux history # ~/.bashrc # HISTSIZE 定义了 history 命令输出的记录数. HISTSIZE=10000 # HISTFILESIZE 定义了在 ~/.bash_history 中保存命令的记录总数. HISTFILESIZE=10000 # 记录空格开头的命，并且去除重复行 HISTCONTROL=ignoredups # 由于bash的history文件默认是覆盖，如果存在多个终端，最后退出的会覆盖以前历史记录，改为追加形式 shopt -s histappend # 当前终端的命令实时追加至 ~/.bash_history PROMPT_COMMAND=&amp;quot;history -a&amp;quot; # 记录时间 HISTTIMEFORMAT=&#39;%F %T &#39; # 执行上一条命令 !! # 执行上一条命令 !-2 # 找出最近一次以go开头的命令,并执行 !&amp;lt;go&amp;gt; # 使用history的编号重复执行先前的命令 !&amp;lt;ID&amp;gt; # 将第&amp;lt;ID&amp;gt;条命令中的第一个&amp;lt;string1&amp;gt;替换成&amp;lt;string2&amp;gt;，并执行 !&amp;lt;ID&amp;gt;:s/&amp;lt;string1&amp;gt;/&amp;lt;string2&amp;gt;/ # 全部替换 !&amp;lt;ID&amp;gt;:gs/&amp;lt;string1&amp;gt;/&amp;lt;string2&amp;gt;/ # 利用 ctrl + r 进行模糊搜索使用过的命令，优先显示最近的结果,再次 ctrl + r 向&amp;lt;ID&amp;gt;小的方向搜索(向后搜索) ctrl+r  Linux screen # screen待补充 # 终端1新建服务 screen -S test # 终端2同步终端1 screen -x test  Linux 默认本地化设置 echo &amp;quot;export LC_ALL=C&amp;quot;&amp;gt;&amp;gt;~/.</description>
    </item>
    
  </channel>
</rss>